version: '3.8'

services:
  yoru-pastebin:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      # These environment variables will override config.toml values
      # Update with your actual RDS endpoint, user, and password
      DATABASE_CONNECTION_STRING: "postgres://<RDS_USER>:<RDS_PASSWORD>@<RDS_ENDPOINT>:5432/<RDS_DB_NAME>?sslmode=require"
      SERVER_PORT: 8080 # Or whatever port your app listens on
    labels:
      # Traefik labels for routing and SSL
      - "traefik.enable=true"
      - "traefik.http.routers.yoru.rule=Host(`yoru.alokranjan.me`)" # CHANGE TO YOUR DESIRED SUBDOMAIN
      - "traefik.http.routers.yoru.entrypoints=websecure"
      - "traefik.http.routers.yoru.tls.certresolver=letsencrypt"
      - "traefik.http.services.yoru.loadbalancer.server.port=8080" # Internal port of your Go app
    networks:
      - web

  traefik:
    image: traefik:v2.10 # Use a stable Traefik v2 version
    restart: unless-stopped
    command:
      # Enable Docker provider
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false # Only expose containers with traefik.enable=true label
      # Entrypoints for HTTP and HTTPS
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # Redirect HTTP to HTTPS
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      # Enable Let's Encrypt
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=your-email@example.com # CHANGE THIS
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      # (Optional) Enable Traefik Dashboard for monitoring
      - --api.dashboard=true
      - --api.insecure=true # WARNING: For dev/testing, remove in prod or secure properly
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Traefik dashboard port (optional)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Mount Docker socket for Traefik to discover containers
      - ./traefik-data:/letsencrypt # Volume for storing SSL certs
    networks:
      - web

networks:
  web:
    external: true # Traefik expects an external network if it's not the primary